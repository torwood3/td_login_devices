{"version":3,"sources":["scripts/app.js"],"names":["RegisterController","$location","authService","reg","this","signup","user","then","data","message","password","username","path","console","log","error","reset","angular","copy","PasswordCheckDirective","require","link","scope","elem","attrs","ctrl","firstPassword","pwCheck","add","on","$apply","v","val","$","$setValidity","ProfileController","$scope","isLogged","vm","MenuCtrl","displayMenu","LoginController","$rootScope","lg","login","success","sessionID","deviceService","$http","getDevices","getDevicesComplete","response","getDevicesFailed","get","host","addDevice","device","post","service","DevicesController","activate","info","deviceView","devices","push","loginComplete","loginFailed","module","config","$locationProvider","$routeProvider","$httpProvider","checkLoggedin","$q","$timeout","deferred","defer","resolve","reject","url","promise","$inject","interceptors","_response","responseError","status","hashPrefix","when","templateUrl","controller","controllerAs","loggedin","otherwise","redirectTo","run","logout","directive","factory","$templateCache","put"],"mappings":"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","file":"../../scripts/app-babbcda1ad.js","sourcesContent":["'use strict';\n\nangular.module('app', ['ngRoute']).config(['$locationProvider', '$routeProvider', '$httpProvider', function ($locationProvider, $routeProvider, $httpProvider) {\n    //================================================\n    // Check if the user is connected\n    //================================================\n    var checkLoggedin = function checkLoggedin($q, $timeout, $http, $location, $rootScope, authService) {\n        // Initialize a new promise\n        var deferred = $q.defer();\n\n        // Make an AJAX call to check if the user is logged in\n        $http.get('http://127.0.0.1:3010/users/loggedin/' + authService.sessionID).success(function (user) {\n            // Authenticated\n            if (user !== '0')\n                /*$timeout(deferred.resolve, 0);*/\n                deferred.resolve();\n\n                // Not Authenticated\n            else {\n                    $rootScope.message = 'You need to log in.';\n                    //$timeout(function(){deferred.reject();}, 0);\n                    deferred.reject();\n                    $location.url('/');\n                }\n        });\n\n        return deferred.promise;\n    };\n    //================================================\n\n    //================================================\n    // Add an interceptor for AJAX errors\n    //================================================\n    $httpProvider.interceptors.push(function ($q, $location) {\n        return {\n            response: function response(_response) {\n                // do something on success\n                return _response;\n            },\n            responseError: function responseError(response) {\n                if (response.status === 401) $location.url('/login');\n                return $q.reject(response);\n            }\n        };\n    });\n    //================================================\n\n    $locationProvider.hashPrefix('!');\n\n    //================================================\n\n    //================================================\n    // Define all the routes\n    //================================================\n    $routeProvider.when(\"/login\", { //a faire en live coding\n        templateUrl: \"./app/login.html\",\n        controller: \"LoginController\",\n        controllerAs: \"lg\"\n    }).when(\"/profile\", { //a faire en live coding\n        templateUrl: \"./app/profile.html\",\n        controller: \"ProfileController\",\n        controllerAs: \"vm\",\n        resolve: {\n            loggedin: checkLoggedin\n        }\n    }).when(\"/register\", {\n        templateUrl: './app/register.html',\n        controller: 'RegisterController',\n        controllerAs: \"reg\"\n    }).when(\"/devices\", {\n        templateUrl: './app/devices.html',\n        controller: 'DevicesController',\n        controllerAs: \"deviceView\",\n        resolve: {\n            loggedin: checkLoggedin\n        }\n    }).otherwise({\n        redirectTo: '/login'\n    });\n}]) // end of config()\n.run(function ($rootScope, authService) {\n    $rootScope.message = '';\n\n    // Logout function is available in any pages\n    $rootScope.logout = function () {\n        $rootScope.message = 'Logged out.';\n        $rootScope.displayMenu = false;\n        authService.sessionID = \"\";\n    };\n});\n'use strict';\n\n/**\r\n * Created by Tor on 03/08/2016.\r\n */\n\nangular.module('app').controller('RegisterController', RegisterController).directive('pwCheck', PasswordCheckDirective);\n\nRegisterController.$inject = ['$location', 'authService'];\n\nfunction RegisterController($location, authService) {\n    var reg = this;\n    reg.signup = function (user) {\n        authService.signup(user).then(function (data) {\n            if (typeof data.message !== \"undefined\") {\n                authService.user.password = user.password;\n                authService.user.username = user.username;\n                $location.path('/');\n            } else {\n                console.log(data.error);\n            }\n        });\n        return false;\n    };\n\n    reg.reset = function () {\n        reg.user = angular.copy({\n            username: \"\", password: \"\"\n        });\n    };\n\n    reg.reset();\n}\n\nfunction PasswordCheckDirective() {\n    return {\n        require: 'ngModel',\n        link: function link(scope, elem, attrs, ctrl) {\n            var firstPassword = '#' + attrs.pwCheck;\n            elem.add(firstPassword).on('keyup', function () {\n                scope.$apply(function () {\n                    var v = elem.val() === $(firstPassword).val();\n                    ctrl.$setValidity('pwmatch', v);\n                });\n            });\n        }\n    };\n};\n'use strict';\n\n/**\r\n * Created by Tor on 05/08/2016.\r\n */\n\nangular.module('app').controller('ProfileController', ProfileController);\n\nProfileController.$inject = ['$scope', '$location', 'authService'];\n\nfunction ProfileController($scope, $location, authService) {\n    if (!authService.isLogged) $location.path('/');\n\n    var vm = this;\n    vm.user = authService.user;\n}\n'use strict';\n\n/**\r\n * Created by Tor on 06/08/2016.\r\n */\n\nangular.module('app').controller('MenuCtrl', MenuCtrl);\n\nMenuCtrl.$inject = ['$scope'];\n\nfunction MenuCtrl($scope) {\n    var menu = this;\n    $scope.displayMenu = false;\n}\n'use strict';\n\nangular.module('app').controller('LoginController', LoginController);\n\nLoginController.$inject = ['$location', '$rootScope', 'authService'];\n\nfunction LoginController($location, $rootScope, authService) {\n    var lg = this;\n    lg.login = function (user) {\n        authService.login(user).then(function (data) {\n            if (typeof data !== \"undefined\") if (data.success) {\n                $rootScope.message = 'Authentication successful!';\n                $rootScope.displayMenu = true;\n                authService.isLogged = true;\n                authService.user = data.user;\n                authService.sessionID = data.sessionID;\n                console.log(data);\n                $location.path('/profile');\n            } else {\n                $rootScope.message = 'Authentication failed.';\n                console.log(data.error);\n            }\n        });\n        return false;\n    };\n\n    lg.reset = function () {\n        lg.user = angular.copy({\n            username: \"\", password: \"\"\n        });\n    };\n\n    lg.reset();\n}\n'use strict';\n\n/**\r\n * Created by Tor on 05/08/2016.\r\n */\n\nangular.module('app').factory('deviceService', deviceService);\n\ndeviceService.$inject = ['$http', 'authService'];\n\nfunction deviceService($http, authService) {\n    var host = 'http://127.0.0.1:3010';\n\n    var service = {\n        getDevices: getDevices,\n        addDevice: addDevice\n    };\n    return service;\n\n    ////////////\n\n    function getDevices() {\n        return $http.get(host + '/api/devices?sessionID=' + authService.sessionID).then(getDevicesComplete).catch(getDevicesFailed);\n\n        function getDevicesComplete(response) {\n            return response.data;\n        }\n\n        function getDevicesFailed(error) {\n            console.error('XHR Failed for getDevices.' + error.data);\n        }\n    }\n\n    function addDevice(device) {\n        device.sessionID = authService.sessionID;\n        return $http.post(host + '/api/devices', device).then(getDevicesComplete).catch(getDevicesFailed);\n\n        function getDevicesComplete(response) {\n            return response.data;\n        }\n\n        function getDevicesFailed(error) {\n            console.error('XHR Failed for getDevices.' + error.data);\n        }\n    }\n}\n'use strict';\n\n/**\r\n * Created by Tor on 03/08/2016.\r\n */\n\nangular.module('app').controller('DevicesController', DevicesController);\n\nDevicesController.$inject = ['$location', 'deviceService', 'authService'];\n\nfunction DevicesController($location, deviceService, authService) {\n\n    if (!authService.isLogged) $location.path('/');\n\n    var deviceView = this;\n    deviceView.devices = [];\n\n    function activate() {\n        return getDevices().then(function () {\n            console.info('Activated devices View');\n        });\n    }\n\n    function getDevices() {\n        return deviceService.getDevices().then(function (data) {\n            deviceView.devices = data;\n            return deviceView.devices;\n        });\n    }\n\n    deviceView.add = function (device) {\n        deviceService.addDevice(device).then(function (data) {\n            deviceView.devices.push(device);\n        });\n        return false;\n    };\n\n    activate();\n}\n'use strict';\n\n/**\r\n * Created by Tor on 05/08/2016.\r\n */\n\nangular.module('app').factory('authService', authService);\n\nauthService.$inject = ['$http'];\n\nfunction authService($http) {\n    var host = 'http://127.0.0.1:3010';\n    var sessionID = '-1';\n    var isLogged = false;\n    var user = {};\n\n    var service = {\n        sessionID: sessionID,\n        login: login,\n        isLogged: isLogged,\n        signup: signup,\n        user: user\n    };\n    return service;\n\n    ////////////\n\n    function login(user) {\n        return $http.post(host + '/users/login', user).then(loginComplete).catch(loginFailed);\n\n        function loginComplete(response) {\n            return response.data;\n        }\n\n        function loginFailed(error) {\n            console.error('XHR Failed for login.' + error.data);\n        }\n    }\n\n    function signup(user) {\n        return $http.post(host + '/users/register', user).then(loginComplete).catch(loginFailed);\n\n        function loginComplete(response) {\n            return response.data;\n        }\n\n        function loginFailed(error) {\n            console.error('XHR Failed for login.' + error.data);\n        }\n    }\n\n    function loggedin() {\n        return $http.get(host + '/users/loggedin/' + authService.sessionID);\n    }\n}\nangular.module(\"app\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/src/app/devices.html\",\"<div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-offset-1 col-md-2\\\">\\r\\n            Nombre de devices: {{deviceView.devices.length}}\\r\\n            <input type=\\\"search\\\" class=\\\"form-control\\\" ng-model=\\\"q\\\" placeholder=\\\"filter devices...\\\" aria-label=\\\"filter devices\\\">\\r\\n            <br>\\r\\n            <form role=\\\"form\\\">\\r\\n                <label for=\\\"name\\\" class=\\\"sr-only\\\">Name</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" ng-model=\\\"device.name\\\" placeholder=\\\"Name\\\">\\r\\n                <label for=\\\"type\\\" class=\\\"sr-only\\\">Type</label>\\r\\n                <input type=\\\"text\\\" id=\\\"type\\\" class=\\\"form-control\\\" ng-model=\\\"device.type\\\" placeholder=\\\"Type\\\">\\r\\n                <label for=\\\"ip\\\" class=\\\"sr-only\\\">IP</label>\\r\\n                <input type=\\\"text\\\" id=\\\"ip\\\" class=\\\"form-control\\\" ng-model=\\\"device.ip\\\" placeholder=\\\"IP\\\">\\r\\n                <input type=\\\"button\\\" class=\\\"btn\\\" ng-click=\\\"deviceView.add(device)\\\" value=\\\"Ajouter\\\">\\r\\n            </form>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <ul>\\r\\n                <li ng-repeat=\\\"device in deviceView.devices | filter:q as results\\\">\\r\\n                    [{{$index + 1}}] {{device.name}} - {{device.type}} - {{device.ip}}\\r\\n                </li>\\r\\n                <li class=\\\"animate-repeat\\\" ng-if=\\\"results.length === 0\\\">\\r\\n                    <strong>No results found...</strong>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\");\n$templateCache.put(\"app/src/app/login.html\",\"\\r\\n<div id=\\\"loginPage\\\">\\r\\n    <form novalidate id=\\\"loginForm\\\" role=\\\"form\\\" class=\\\"form-signin\\\">\\r\\n        <h2 class=\\\"form-signin-heading\\\">Please sign in</h2>\\r\\n        <label for=\\\"username\\\" class=\\\"sr-only\\\">Username</label>\\r\\n        <input type=\\\"text\\\" id=\\\"username\\\" class=\\\"form-control\\\" ng-model=\\\"lg.user.username\\\" placeholder=\\\"Username\\\" ng-required autofocus>\\r\\n        <label for=\\\"password\\\" class=\\\"sr-only\\\">Password</label>\\r\\n        <input type=\\\"password\\\" id=\\\"password\\\" class=\\\"form-control\\\" ng-model=\\\"lg.user.password\\\" placeholder=\\\"Password\\\" ng-required>\\r\\n\\r\\n        <input type=\\\"button\\\" class=\\\"btn btn-danger btn-block\\\" ng-click=\\\"lg.reset()\\\" value=\\\"Reset\\\">\\r\\n        <input type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\" ng-click=\\\"lg.login(lg.user)\\\" value=\\\"Login\\\">\\r\\n    </form>\\r\\n</div>\\r\\n\");\n$templateCache.put(\"app/src/app/profile.html\",\"<div>\\r\\n    Username : {{vm.user.username}}\\r\\n</div>\");\n$templateCache.put(\"app/src/app/register.html\",\"<div id=\\\"regPage\\\">\\r\\n    <form novalidate id=\\\"regForm\\\" role=\\\"form\\\">\\r\\n        <input type=\\\"text\\\" ng-model=\\\"user.email\\\" placeholder=\\\"Username\\\" ng-required>\\r\\n        <input type=\\\"password\\\" ng-model=\\\"user.password\\\" placeholder=\\\"Password\\\" ng-required>\\r\\n        <input type=\\\"password\\\" ng-model=\\\"user.password2\\\" pw-check=\\\"user.password\\\" placeholder=\\\"Password\\\" ng-required>\\r\\n        <input type=\\\"button\\\" ng-click=\\\"reg.reset()\\\" value=\\\"Reset\\\">\\r\\n        <input type=\\\"button\\\" ng-click=\\\"reg.signup(user)\\\" value=\\\"Register\\\">\\r\\n        <div class=\\\"msg-block\\\" ng-show=\\\"myForm.$error\\\">\\r\\n          <span class=\\\"msg-error\\\" ng-show=\\\"myForm.pw2.$error.pwmatch\\\">\\r\\n            Passwords don\\'t match.\\r\\n          </span>\\r\\n        </div>\\r\\n    </form>\\r\\n    {{user.password}}\\r\\n</div>\\r\\n\\r\\n\\r\\n\");}]);"]}